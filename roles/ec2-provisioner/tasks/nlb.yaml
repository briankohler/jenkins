---

- name: set nlb prd
  set_fact:
    lb_subnet_env: "prdprivate"
  when: >
        ec2_env == "prd"

- name: set nlb mgmt
  set_fact:
    lb_subnet_env: "mgmt"
  when: >
        ec2_env == "mgmt"

- name: set nlb prd
  set_fact:
    lb_subnet_env: "nonprdprivate"
  when: >
        lb_subnet_env is not defined

- name: Create nlb targets
  set_fact:
    nlb_targets:
      - Id: "{{ item.instance_id }}"
        Port: "{{ lb_instance_port }}"
  with_items:
    - "{{ ec2_instance_facts.instances }}"

- name: Create nlb target group
  command: >
           bash -c "aws --region={{ ec2_region }} elbv2 create-target-group --name={{ ec2_env }}-{{ ec2_role }}-nlb-tg --protocol=TCP --port={{ lb_port }} --vpc-id={{ ec2_vpc }} | jq -r .TargetGroups[0].TargetGroupArn"
  register: target_groups

- name: debug target_groups
  debug:
    msg: "{{ target_groups }}"

- name: Register Targets
  command: >
           aws --region {{ ec2_region }} elbv2 register-targets --target-group-arn {{ item.1 }} --targets Id={{ item.0.Id }} 
  with_together:
    - "{{ nlb_targets }}"
    - "{{ target_groups.stdout_lines }}"

- name: NLB Target Group Facts
  elb_target_group_facts:
    region: "{{ ec2_region }}"
    names:
      - "{{ ec2_env }}-{{ ec2_role }}-nlb-tg"
  register: nlb_target_group_facts

- name: nlb facts
  elb_application_lb_facts:
    region: "{{ ec2_region }}"
    names:
      - "{{ lb_subnet_env }}-{{ ec2_nlb[lb_subnet_env][lb_scheme]['scheme'] }}-nlb"
  register: nlb_facts
  ignore_errors: True

- name: Create NLB
  command: >
           aws --region={{ ec2_region }} elbv2 create-load-balancer --type=network --name={{ lb_subnet_env }}-{{ ec2_nlb[lb_subnet_env][lb_scheme]['scheme'] }}-nlb --subnets {{ ec2_nlb[lb_subnet_env][lb_scheme]['subnets']|join(' ') }} --scheme={{ ec2_nlb[lb_subnet_env][lb_scheme]['scheme'] }} --tags=Key=Name,Value={{ lb_subnet_env }}-{{ ec2_nlb[lb_subnet_env][lb_scheme]['scheme'] }}-nlb

- name: nlb facts
  elb_application_lb_facts:
    region: "{{ ec2_region }}"
    names:
      - "{{ lb_subnet_env }}-{{ ec2_nlb[lb_subnet_env][lb_scheme]['scheme'] }}-nlb"
  register: nlb_facts
           
- name: Add port rule
  command: >
           aws --region={{ ec2_region }} elbv2 create-listener --load-balancer-arn {{ nlb_facts.load_balancers[0].load_balancer_arn|quote }} --protocol TCP --port {{ lb_port }} --default-actions Type=forward,TargetGroupArn={{ nlb_target_group_facts.target_groups[0].target_group_arn|quote }}


- elb_application_lb_facts:
    region: "{{ ec2_region }}"
    names:
      - "{{ lb_subnet_env }}-{{ ec2_nlb[lb_subnet_env][lb_scheme]['scheme'] }}-nlb"
  register: nlb_facts

- name: Register ALB DNS Name
  local_action:
    module: "route53"
    state: "create"
    zone: "{{ ec2_domain }}."
    private_zone: "{{ ec2_private_zone }}"
    wait: yes
    vpc_id: "{{ ec2_vpc }}"
    record: "{{ ec2_role }}.{{ ec2_domain }}"
    type: "CNAME"
    overwrite: yes
    ttl: "300"
    value:
      - "{{ item.dns_name }}"
  with_items:
    - "{{ nlb_facts.load_balancers }}"
                    

